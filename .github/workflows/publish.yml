name: Publish to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run code quality checks
      run: |
        black --check src tests
        isort --check-only src tests
        flake8 src tests
        mypy src
    
    - name: Run tests
      run: |
        pytest --cov=src/openai_vision_cost --cov-report=xml
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Build package
      run: python -m build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  publish-test:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == true
    environment:
      name: test-pypi
      url: https://test.pypi.org/project/openai-vision-cost/
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}

  publish-pypi:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == false
    environment:
      name: pypi
      url: https://pypi.org/project/openai-vision-cost/
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  notify:
    needs: [publish-pypi, publish-test]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify success
      if: needs.publish-pypi.result == 'success' || needs.publish-test.result == 'success'
      run: |
        echo "✅ Package published successfully!"
        echo "Release: ${{ github.event.release.tag_name }}"
        echo "Published to: ${{ github.event.release.prerelease == 'true' && 'Test PyPI' || 'PyPI' }}"
    
    - name: Notify failure
      if: needs.publish-pypi.result == 'failure' || needs.publish-test.result == 'failure'
      run: |
        echo "❌ Package publication failed!"
        echo "Release: ${{ github.event.release.tag_name }}"
        exit 1